//ONLY  MAX TWO TRANSCATIONS ARE ALLOWED//

class Solution {
    public int maxProfit(int[] prices) {
        int n= prices.length;
         int lsf=prices[0];
        int mpist=0;
        int[] dp= new int[n];
        
        
        for(int i=1;i<n;i++){
            
            if(prices[i]<lsf){
                lsf=prices[i];
            } 
            mpist= prices[i]-lsf;
            
            if(mpist>dp[i-1]){
               dp[i]=mpist; 
            }else{
                
                dp[i]= dp[i-1];
            }
           
        }
        
        
        int mpibt=0;
        int mxat=prices[n-1];
        int[] dpr= new int[n]; 
        for(int i=n-2;i>=0;i--){
            if(prices[i]>mxat){
                mxat=prices[i];
            } 
            
            mpibt=mxat-prices[i];
            if(mpibt>dpr[i+1]){
                dpr[i]= mpibt;
                
            }else{
                dpr[i]= dpr[i+1];
            }
             
        }
        int tmax=0;
        for(int i=0;i<n;i++){
            tmax= Math.max(tmax,dp[i]+dpr[i]);
        }
         return tmax;
    }
}
