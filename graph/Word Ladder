class Solution {
    public int ladderLength(String beginWord, String endWord, List<String> wordList) {
        Set<String> set = new HashSet<>(wordList);
        if(!set.contains(endWord)){
            return 0;
        }    
        
    Queue<String> q= new ArrayDeque<>();
        q.add(beginWord);
        int level=0;
        
        while(!q.isEmpty()){
            
            int size= q.size();
            
            for(int i=0;i<size;i++){
                
                String curr= q.remove();
                if(curr.equals(endWord)) return level+1;
                char[] curtoArr= curr.toCharArray();
                
                for(int j=0;j<curr.length();j++){
                    char tmp= curtoArr[j];
                    
                    for(char k='a';k<='z';k++){
                        curtoArr[j]=k;
                        
                        
                        String ntmp= new String(curtoArr);
                        if(ntmp.equals(curr)){
                            continue;
                        }
                        if(set.contains(ntmp)){
                            q.add(ntmp);
                            set.remove(ntmp);
                        }
                        
                        
                        
                    }
                    curtoArr[j]=tmp;
                }
                
            }
            level++;
        }
        
    return 0;
    
    }
    
}
